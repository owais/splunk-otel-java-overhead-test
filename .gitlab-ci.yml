
stages:
  - run-test

run-test:
  stage: run-test
  image:
    name: docker.repo.splunkdev.net/ci-cd/ci-container:python-3.9-aws
  before_script:
    - python --version
    - pip install --upgrade pip jinja2-cli
    - pip install splunk-orca -i https://repo.splunk.com/artifactory/api/pypi/pypi/simple
    - pip uninstall -y ansible && pip install ansible-core==2.12.1
    - orca --version
    - creds-helper init
    - ORCA_USERNAME_FILE=$(creds-helper kv ORCA_CREDENTIALS --key=username)
    - ORCA_PASSWORD_FILE=$(creds-helper kv ORCA_CREDENTIALS --key=password)
    - export ORCA_USERNAME=$(cat "$ORCA_USERNAME_FILE")
    - export ORCA_PASSWORD=$(cat "$ORCA_PASSWORD_FILE")
    # This appears to provide an access token that does not work, so we have to fetch it ourselves.
    # - export VAULT_ACCESS_TOKEN=$(cat `creds-helper vault` | jq -j '.VAULT_TOKEN')
    - >
        export VAULT_ACCESS_TOKEN=$(curl -qs -H 'X-Vault-Namespace: eeff/application' -X POST --data "{\"password\": \"${ORCA_PASSWORD}\"}" https://secrets.splunkit.io/v1/auth/ldap/login/${ORCA_USERNAME} | jq -r '.auth.client_token')
    - mkdir -p ~/.orca
    - echo '[general]' > ~/.orca/orca.conf
    - echo "username = ${ORCA_USERNAME}" >> ~/.orca/orca.conf
    - echo 'aws_access_key_id = ' >> ~/.orca/orca.conf
    - echo 'aws_secret_access_key = ' >> ~/.orca/orca.conf
    - echo "vault_token = ${VAULT_ACCESS_TOKEN}" >> ~/.orca/orca.conf
    - echo 'vault_host = secrets.splunkit.io' >> ~/.orca/orca.conf
    - echo 'vault_namespace = eeff/application' >> ~/.orca/orca.conf
    - echo 'vault_secrets_engine = orca_aws_kv' >> ~/.orca/orca.conf
    - echo 'vault_secrets_path = default/creds' >> ~/.orca/orca.conf
    - echo 'export DOCKER_TLS_VERIFY=1' > ~/.orca/env.sh
    - echo 'export COMPOSE_TLS_VERSION=TLSv1_2' >> ~/.orca/env.sh
    - echo "export DOCKER_CERT_PATH=$PWD" >> ~/.orca/env.sh
    - echo "export DOCKER_HOST=tcp://ucp.west.splunkeng.com:443" >> ~/.orca/env.sh
    - ssh-keygen -t rsa -N '' -m PEM -f /root/.orca/id_rsa
  script:
    - orca --cloud aws show deployments
    - ./provision/provision.sh
    - orca --cloud aws show deployments
    - ./provision/start-remote-test.sh
    - sleep 300
    - ./check-test-progress.sh
